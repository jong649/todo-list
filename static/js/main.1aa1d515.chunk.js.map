{"version":3,"sources":["components/Todoitem.jsx","components/Todos.jsx","components/layout/Header.jsx","components/AddTodo.jsx","components/pages/About.jsx","App.js","index.js"],"names":["Todoitem","getStyle","background","borderBottom","padding","textDecoration","props","todo","completed","this","id","title","style","type","onChange","toggleComplete","bind","onClick","delTodo","btnStyle","Component","color","border","borderRadius","cursor","float","Todos","todos","map","key","headerStyle","textAlign","linkStyle","Header","to","AddTodo","state","e","setState","target","name","value","onSubmit","preventDefault","addTodo","display","flex","placeholder","className","About","App","fetch","method","then","response","filter","postBody","headers","body","JSON","stringify","json","data","exact","path","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1aa1d515.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Todoitem extends Component {\n  getStyle = () => {\n    return {\n      background: \"#f4f4f4\",\n      borderBottom: \"1px #ccc dotted\",\n      padding: \"10px\",\n      textDecoration: this.props.todo.completed ? \"line-through\" : \"none\"\n    };\n  };\n\n  render() {\n    const { id, title } = this.props.todo;\n    return (\n      <div style={this.getStyle()}>\n        <p>\n          <input\n            type=\"checkbox\"\n            onChange={this.props.toggleComplete.bind(this, id)}\n          />{\" \"}\n          {title}\n          <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>\n            x\n          </button>\n        </p>\n      </div>\n    );\n  }\n}\n\nTodoitem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  toggleComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired\n};\n\nconst btnStyle = {\n  background: \"#ff0000\",\n  color: \"#fff\",\n  border: \"none\",\n  padding: \"5px 9px\",\n  borderRadius: \"50%\",\n  cursor: \"pointer\",\n  float: \"right\"\n};\n\nexport default Todoitem;\n","import React, { Component } from \"react\";\nimport Todoitem from \"./Todoitem\";\nimport PropTypes from \"prop-types\";\n\nclass Todos extends Component {\n  render() {\n    return this.props.todos.map(todo => (\n      <Todoitem\n        key={todo.id}\n        todo={todo}\n        toggleComplete={this.props.toggleComplete}\n        delTodo={this.props.delTodo}\n      />\n    ));\n  }\n}\nTodos.propTypes = {\n  todos: PropTypes.array.isRequired,\n  toggleComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired\n};\n\nexport default Todos;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n  return (\n    <header style={headerStyle}>\n      <h1>Todo List</h1>\n      <Link to=\"/\" style={linkStyle}>\n        Home\n      </Link>{\" \"}\n      |{\" \"}\n      <Link to=\"/about\" style={linkStyle}>\n        About\n      </Link>\n    </header>\n  );\n};\n\nconst headerStyle = {\n  background: \"#333\",\n  color: \"#fff\",\n  padding: \"10px\",\n  textAlign: \"center\"\n};\n\nconst linkStyle = {\n  color: \"#fff\",\n  textDecoration: \"none\"\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddTodo extends Component {\n  state = {\n    title: \"\"\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.addTodo(this.state.title);\n    this.setState({ title: \"\" });\n  };\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} style={{ display: \"flex\" }}>\n        <input\n          style={{ flex: \"10\", padding: \"5px\" }}\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Add Todo\"\n          value={this.state.title}\n          onChange={this.onChange}\n        />\n        <input\n          type=\"submit\"\n          value=\"Submit\"\n          className=\"btn\"\n          style={{ flex: \"1\" }}\n        />\n      </form>\n    );\n  }\n}\n\nAddTodo.propTypes = {\n  addTodo: PropTypes.func.isRequired\n};\n\nexport default AddTodo;\n","import React, { Fragment } from \"react\";\n\nconst About = () => {\n  return (\n    <Fragment>\n      <h1>About</h1>\n      <p>This is the Todo List app v1.0.0</p>\n    </Fragment>\n  );\n};\n\nexport default About;\n","import React, { Component, Fragment } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Todos from \"./components/Todos\";\nimport Header from \"./components/layout/Header\";\nimport AddTodo from \"./components/AddTodo\";\nimport About from \"./components/pages/About\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    todos: []\n  };\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\n      .then(response => response.json())\n      .then(data => this.setState({ todos: data }));\n  }\n\n  toggleComplete = id => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    });\n  };\n\n  delTodo = id => {\n    fetch(`https://jsonplaceholder.typicode.com/todos/${id}`, {\n      method: \"DELETE\"\n    }).then(response =>\n      this.setState({\n        todos: [\n          ...this.state.todos.filter(todo => {\n            return todo.id !== id;\n          })\n        ]\n      })\n    );\n  };\n\n  addTodo = title => {\n    const postBody = {\n      title,\n      completed: false\n    };\n    fetch(\"https://jsonplaceholder.typicode.com/todos\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(postBody)\n    })\n      .then(response => response.json())\n      .then(data => this.setState({ todos: [...this.state.todos, data] }));\n    //this.setState({ todos: [...this.state.todos, newTodo] });\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <Fragment>\n                  <AddTodo addTodo={this.addTodo} />\n                  <Todos\n                    todos={this.state.todos}\n                    toggleComplete={this.toggleComplete}\n                    delTodo={this.delTodo}\n                  />\n                </Fragment>\n              )}\n            />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}